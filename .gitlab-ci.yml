stages:
  - build
  - deploy

variables:
  BATCH_BUILD: "1"
  V: "0"
  MAKEFLAGS: "-j5 --no-keep-going"
  IDF_CI_BUILD: "1"

before_script:
  - export IDF_PATH=~/.espressif/idf/esp-idf-v4.2
  - cd $IDF_PATH
  - git pull
  - git submodule update --init --recursive
  - ./install.sh
  - . ./export.sh
  - cd -

.build_examples_template: &build_examples_template
  stage: build
  image: $CI_DOCKER_REGISTRY/ae-esp32-ci-env:latest-3cf42c4c
  tags:
    - build

build_demo_cmake:
  <<: *build_examples_template
  script:
    - idf.py set-target esp32
    - idf.py build
    - idf.py set-target esp32s2
    - idf.py build
    - cd ../../

push_master_to_github:
  stage: deploy
  only:
    - master
    - /^release\/v/
#  when: on_success
  image: $CI_DOCKER_REGISTRY/esp32-ci-env
  variables:
    GIT_STRATEGY: clone
    GITHUB_PUSH_REFS: refs/remotes/origin/release refs/remotes/origin/master
  before_script:
    - echo "skip default before_script"
  script:
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - echo -n $GH_PUSH_KEY >> ~/.ssh/id_rsa_base64
    - base64 --decode --ignore-garbage ~/.ssh/id_rsa_base64 > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    - echo -e "Host github.com\n\tStrictHostKeyChecking no\n" >> ~/.ssh/config
    - git remote add github git@github.com:espressif/esp-qcloud.git
    - eval $(git for-each-ref --shell bash --format 'if [ $CI_BUILD_REF == %(objectname) ]; then git checkout -B %(refname:strip=3); git push --follow-tags github %(refname:strip=3); fi;' $GITHUB_PUSH_REFS)
