stages:
  - build
  - deploy

# global variables
variables: &global-variables
  GIT_STRATEGY: clone
  PYTHON_VER: 3

.before_script_preparation: &before_script_preparation
  - mkdir -p ~/.ssh
  - chmod 700 ~/.ssh
  - echo -n $GITLAB_KEY >> ~/.ssh/id_rsa_base64
  - base64 --decode --ignore-garbage ~/.ssh/id_rsa_base64 > ~/.ssh/id_rsa
  - chmod 600 ~/.ssh/id_rsa
  - echo -e "Host gitlab.espressif.cn\n\tStrictHostKeyChecking no\n" >> ~/.ssh/config

.setup_tools: &setup_tools
  - git submodule update --init --recursive
  - export IDF_PATH=$(pwd)/esp-idf
  - source $IDF_PATH/tools/ci/configure_ci_environment.sh
  - $IDF_PATH/tools/idf_tools.py --non-interactive install && eval "$($IDF_PATH/tools/idf_tools.py --non-interactive export)" || exit 1
  - python $IDF_PATH/tools/idf_tools.py install-python-env
  - pip install -r requirements.txt

.get_bridge_priv: &get_bridge_priv
  - git clone ${GITLAB_PRIV_SRC_URL} components/bridge/priv_src
  - cd components/bridge/priv_src
  - git checkout ${CI_BUILD_REF_NAME} -- || echo "Using esp-bridge default branch"
  - cd -

.build_bridge_esp32: &build_bridge_esp32
  - echo -e "\nCONFIG_BRIDGE_DATA_FORWARDING_NETIF_SDIO=y" >> sdkconfig.defaults.esp32
  - idf.py set-target esp32
  - idf.py build

  - rm -rf build sdkconfig
  - sed -i '$d' sdkconfig.defaults.esp32
  - echo -e "\nCONFIG_MESH_LITE_ENABLE=y\nCONFIG_BRIDGE_USE_WIFI_PROVISIONING_OVER_BLE=y" >> sdkconfig.defaults.esp32
  - idf.py set-target esp32
  - idf.py build

  - rm -rf build sdkconfig
  - sed -i '$d' sdkconfig.defaults.esp32
  - echo -e "\nCONFIG_BRIDGE_EXTERNAL_NETIF_MODEM=y" >> sdkconfig.defaults.esp32
  - echo -e "\nCONFIG_BRIDGE_DATA_FORWARDING_NETIF_ETHERNET=y\nCONFIG_BRIDGE_DATA_FORWARDING_NETIF_SPI=y" >> sdkconfig.defaults.esp32
  - idf.py set-target esp32
  - idf.py build

.build_bridge_esp32c3: &build_bridge_esp32c3
  - echo -e "\nCONFIG_BRIDGE_EXTERNAL_NETIF_ETHERNET=y" >> sdkconfig.defaults.esp32c3
  - idf.py set-target esp32c3
  - idf.py build

  - rm -rf build sdkconfig
  - sed -i '$d' sdkconfig.defaults.esp32c3
  - echo -e "\nCONFIG_MESH_LITE_ENABLE=y\nCONFIG_BRIDGE_USE_WIFI_PROVISIONING_OVER_BLE=y" >> sdkconfig.defaults.esp32c3
  - echo -e "\nCONFIG_BRIDGE_EXTERNAL_NETIF_MODEM=y" >> sdkconfig.defaults.esp32c3
  - echo -e "\nCONFIG_BRIDGE_DATA_FORWARDING_NETIF_ETHERNET=y\nCONFIG_BRIDGE_DATA_FORWARDING_NETIF_SPI=y" >> sdkconfig.defaults.esp32c3
  - idf.py set-target esp32c3
  - idf.py build

.build_bridge_esp32s2: &build_bridge_esp32s2
  - echo -e "\nCONFIG_BRIDGE_EXTERNAL_NETIF_ETHERNET=y" >> sdkconfig.defaults.esp32s2
  - idf.py set-target esp32s2
  - idf.py build

  - rm -rf build sdkconfig
  - sed -i '$d' sdkconfig.defaults.esp32s2
  - echo -e "\nCONFIG_MESH_LITE_ENABLE=y" >> sdkconfig.defaults.esp32s2
  - echo -e "\nCONFIG_BRIDGE_EXTERNAL_NETIF_MODEM=y" >> sdkconfig.defaults.esp32s2
  - echo -e "\nCONFIG_BRIDGE_DATA_FORWARDING_NETIF_ETHERNET=y\nCONFIG_BRIDGE_DATA_FORWARDING_NETIF_SPI=y\nCONFIG_BRIDGE_DATA_FORWARDING_NETIF_USB=y" >> sdkconfig.defaults.esp32s2
  - idf.py set-target esp32s2
  - idf.py build

.build_bridge_esp32s3: &build_bridge_esp32s3
  - echo -e "\nCONFIG_BRIDGE_EXTERNAL_NETIF_ETHERNET=y" >> sdkconfig.defaults.esp32s3
  - idf.py set-target esp32s3
  - idf.py build

  - rm -rf build sdkconfig
  - sed -i '$d' sdkconfig.defaults.esp32s3
  - echo -e "\nCONFIG_MESH_LITE_ENABLE=y\nCONFIG_BRIDGE_USE_WIFI_PROVISIONING_OVER_BLE=y" >> sdkconfig.defaults.esp32s3
  - echo -e "\nCONFIG_BRIDGE_EXTERNAL_NETIF_MODEM=y" >> sdkconfig.defaults.esp32s3
  - echo -e "\nCONFIG_BRIDGE_DATA_FORWARDING_NETIF_ETHERNET=y\nCONFIG_BRIDGE_DATA_FORWARDING_NETIF_SPI=y\nCONFIG_BRIDGE_DATA_FORWARDING_NETIF_USB=y" >> sdkconfig.defaults.esp32s3
  - idf.py set-target esp32s3
  - idf.py build

esp32_v4.4_build:
  stage: build
  image: espressif/idf:release-v4.4
  tags:
    - build

  variables:
    <<: *global-variables

  before_script:
    - *before_script_preparation

  script:
    - *get_bridge_priv
    - git clone -b release/v4.4 --recursive ${GITLAB_SSH_SERVER}/espressif/esp-idf.git esp-idf
    - *setup_tools
    - *build_bridge_esp32
    - cd examples/rainmaker/led_light
    - idf.py set-target esp32
    - idf.py build

esp32_v5.0_build:
  stage: build
  image: $CI_DOCKER_REGISTRY/esp-env-v5.0:2
  tags:
    - build

  variables:
    <<: *global-variables

  before_script:
    - *before_script_preparation

  script:
    - *get_bridge_priv
    - git clone -b release/v5.0 --recursive ${GITLAB_SSH_SERVER}/espressif/esp-idf.git esp-idf
    - *setup_tools
    - *build_bridge_esp32

esp32c3_v4.4_build:
  stage: build
  image: espressif/idf:release-v4.4
  tags:
    - build

  variables:
    <<: *global-variables

  before_script:
    - *before_script_preparation

  script:
    - *get_bridge_priv
    - git clone -b release/v4.4 --recursive ${GITLAB_SSH_SERVER}/espressif/esp-idf.git esp-idf
    - *setup_tools
    - *build_bridge_esp32c3
    - cd examples/rainmaker/led_light
    - idf.py set-target esp32c3
    - idf.py build

esp32c3_v5.0_build:
  stage: build
  image: $CI_DOCKER_REGISTRY/esp-env-v5.0:2
  tags:
    - build

  variables:
    <<: *global-variables

  before_script:
    - *before_script_preparation

  script:
    - *get_bridge_priv
    - git clone -b release/v5.0 --recursive ${GITLAB_SSH_SERVER}/espressif/esp-idf.git esp-idf
    - *setup_tools
    - *build_bridge_esp32c3

esp32s2_v4.4_build:
  stage: build
  image: espressif/idf:release-v4.4
  tags:
    - build

  variables:
    <<: *global-variables

  before_script:
    - *before_script_preparation

  script:
    - *get_bridge_priv
    - git clone -b release/v4.4 --recursive ${GITLAB_SSH_SERVER}/espressif/esp-idf.git esp-idf
    - *setup_tools
    - *build_bridge_esp32s2

esp32s2_v5.0_build:
  stage: build
  image: $CI_DOCKER_REGISTRY/esp-env-v5.0:2
  tags:
    - build

  variables:
    <<: *global-variables

  before_script:
    - *before_script_preparation

  script:
    - *get_bridge_priv
    - git clone -b release/v5.0 --recursive ${GITLAB_SSH_SERVER}/espressif/esp-idf.git esp-idf
    - *setup_tools
    - *build_bridge_esp32s2

esp32s3_v4.4_build:
  stage: build
  image: espressif/idf:release-v4.4
  tags:
    - build

  variables:
    <<: *global-variables

  before_script:
    - *before_script_preparation

  script:
    - *get_bridge_priv
    - git clone -b release/v4.4 --recursive ${GITLAB_SSH_SERVER}/espressif/esp-idf.git esp-idf
    - *setup_tools
    - *build_bridge_esp32s3
    - cd examples/rainmaker/led_light
    - idf.py set-target esp32s3
    - idf.py build

esp32s3_v5.0_build:
  stage: build
  image: $CI_DOCKER_REGISTRY/esp-env-v5.0:2
  tags:
    - build

  variables:
    <<: *global-variables

  before_script:
    - *before_script_preparation

  script:
    - *get_bridge_priv
    - git clone -b release/v5.0 --recursive ${GITLAB_SSH_SERVER}/espressif/esp-idf.git esp-idf
    - *setup_tools
    - *build_bridge_esp32s3

push_master_to_github:
  stage: deploy
  only:
    - master
#  when: on_success
  image: $CI_DOCKER_REGISTRY/esp32-ci-env
  variables:
    GIT_STRATEGY: clone
    GITHUB_PUSH_REFS: refs/remotes/origin/release refs/remotes/origin/master
  before_script:
    - echo "skip default before_script"
  script:
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - echo -n $GH_PUSH_KEY > ~/.ssh/id_rsa_base64
    - base64 --decode --ignore-garbage ~/.ssh/id_rsa_base64 > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    - echo -e "Host github.com\n\tStrictHostKeyChecking no\n" >> ~/.ssh/config
    - if [ -d "components/bridge/priv_src" ]; then exit 1; fi
    - git remote add github git@github.com:espressif/esp-bridge.git
    - eval $(git for-each-ref --shell bash --format 'if [ $CI_BUILD_REF == %(objectname) ]; then git checkout -B %(refname:strip=3); git push --follow-tags github %(refname:strip=3); fi;' $GITHUB_PUSH_REFS)
