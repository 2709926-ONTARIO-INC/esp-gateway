diff --git a/components/esp_rainmaker/CMakeLists.txt b/components/esp_rainmaker/CMakeLists.txt
index 71306b9..ca9cd4d 100644
--- a/components/esp_rainmaker/CMakeLists.txt
+++ b/components/esp_rainmaker/CMakeLists.txt
@@ -16,7 +16,7 @@ set(core_srcs "src/core/esp_rmaker_core.c"
 
 set(priv_req protobuf-c json_parser json_generator wifi_provisioning
              nvs_flash esp_http_client app_update esp-tls mbedtls esp_https_ota
-             console esp_local_ctrl esp_https_server mdns esp_schedule efuse driver)
+             console esp_local_ctrl esp_https_server mdns esp_schedule efuse driver esp_mesh_lite)
 
 if(CONFIG_ESP_RMAKER_ASSISTED_CLAIM)
     list(APPEND core_srcs
diff --git a/components/esp_rainmaker/src/core/esp_rmaker_param.c b/components/esp_rainmaker/src/core/esp_rmaker_param.c
index 36575ef..ccd533e 100644
--- a/components/esp_rainmaker/src/core/esp_rmaker_param.c
+++ b/components/esp_rainmaker/src/core/esp_rmaker_param.c
@@ -396,22 +396,76 @@ static esp_err_t esp_rmaker_device_set_params(_esp_rmaker_device_t *device, jpar
     return ESP_OK;
 }
 
-esp_err_t esp_rmaker_handle_set_params(char *data, size_t data_len, esp_rmaker_req_src_t src)
+void esp_rmaker_control_light_by_user(char* data)
 {
-    ESP_LOGI(TAG, "Received params: %.*s", data_len, data);
     jparse_ctx_t jctx;
-    if (json_parse_start(&jctx, data, data_len) != 0) {
-        return ESP_FAIL;
+    if (json_parse_start(&jctx, data, strlen(data)) != 0) {
+        return;
     }
     _esp_rmaker_device_t *device = esp_rmaker_node_get_first_device(esp_rmaker_get_node());
-    while (device) {
-        if (json_obj_get_object(&jctx, device->name) == 0) {
-            esp_rmaker_device_set_params(device, &jctx, src);
-            json_obj_leave_object(&jctx);
-        }
-        device = device->next;
+    if (json_obj_get_object(&jctx, device->name) == OS_SUCCESS) {
+        esp_rmaker_device_set_params(device, &jctx, ESP_RMAKER_REQ_SRC_CLOUD);
+        json_obj_leave_object(&jctx);
     }
     json_parse_end(&jctx);
+}
+
+#include "cJSON.h"
+#include "esp_wifi.h"
+#include "esp_mesh_lite_core.h"
+#include "esp_rmaker_utils.h"
+
+#define GROUP_CONTROL_PAYLOAD_LEN  200
+
+char group_control_payload[GROUP_CONTROL_PAYLOAD_LEN];
+
+extern void esp_now_send_group_control(uint8_t* payload);
+extern bool esp_rmaker_is_my_group_id(uint8_t group_id);
+
+esp_err_t esp_rmaker_handle_set_params(char *data, size_t data_len, esp_rmaker_req_src_t src)
+{
+    ESP_LOGI(TAG, "Received params: %.*s", data_len, data);
+
+    bool control = true;
+
+    if (esp_mesh_lite_get_level() == 1) {
+        cJSON *rmaker_data_js = cJSON_Parse((const char*)data);
+        cJSON *light_js = cJSON_GetObjectItem(rmaker_data_js, "Light");
+        if (light_js) {
+            cJSON *group_id_js = cJSON_GetObjectItem(light_js, "group_id");
+            if (group_id_js) {
+                char* payload_string = cJSON_PrintUnformatted(rmaker_data_js);
+                memset(group_control_payload, 0x0, GROUP_CONTROL_PAYLOAD_LEN);
+                memcpy(group_control_payload, payload_string, GROUP_CONTROL_PAYLOAD_LEN);
+                free(payload_string);
+
+                esp_now_send_group_control((uint8_t*)group_control_payload);
+
+                if (group_id_js->valueint && (esp_rmaker_is_my_group_id(group_id_js->valueint) == false)) {
+                    control = false;
+                }
+
+                cJSON_Delete(rmaker_data_js);
+            }
+        }
+    }
+
+    if (control) {
+        jparse_ctx_t jctx;
+        if (json_parse_start(&jctx, data, data_len) != 0) {
+            return ESP_FAIL;
+        }
+        _esp_rmaker_device_t *device = esp_rmaker_node_get_first_device(esp_rmaker_get_node());
+        while (device) {
+            if (json_obj_get_object(&jctx, device->name) == 0) {
+                esp_rmaker_device_set_params(device, &jctx, src);
+                json_obj_leave_object(&jctx);
+            }
+            device = device->next;
+        }
+        json_parse_end(&jctx);
+    }
+
     return ESP_OK;
 }
 
diff --git a/components/esp_rainmaker/src/core/esp_rmaker_system_service.c b/components/esp_rainmaker/src/core/esp_rmaker_system_service.c
index 7c89229..897959d 100644
--- a/components/esp_rainmaker/src/core/esp_rmaker_system_service.c
+++ b/components/esp_rainmaker/src/core/esp_rmaker_system_service.c
@@ -35,6 +35,7 @@ static esp_err_t esp_rmaker_system_serv_write_cb(const esp_rmaker_device_t *devi
         }
     } else if (strcmp(esp_rmaker_param_get_type(param), ESP_RMAKER_PARAM_FACTORY_RESET) == 0) {
         if (val.val.b == true) {
+            esp_mesh_lite_erase_rtc_store();
             err = esp_rmaker_factory_reset(config->reset_seconds, config->reset_reboot_seconds);
         }
     } else if (strcmp(esp_rmaker_param_get_type(param), ESP_RMAKER_PARAM_WIFI_RESET) == 0) {
